<?xml version="1.0" encoding="UTF-8"?>
<project>

    <build>
        <plugins>
            <!--
			maven-assembly-plugin打包一个指定目录结构的jar
            该插件不能再具有软链接的目录中执行，会报错(windows遇到了，linux未尝试)
			
            linux下用冒号，win下用分号
            java -cp ./lib/*;./conf  jar.test.Main
            java -jar .\lib\jartest-0.0.1-SNAPSHOT.jar
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.0.0</version>
                <dependencies>
                    <!--自定义assembly descriptor-->
                    <dependency>
                        <artifactId>assembly</artifactId>
                        <groupId>test.cjh</groupId>
                        <version>0.0.1-SNAPSHOT</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
							<!--mvn help:describe -Dplugin=assembly 查看assembly插件的goals-->
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <!--包名不追加descriptorRef引用的assemblyId-->
                            <appendAssemblyId>false</appendAssemblyId>
                            <descriptorRefs>
                                <!--
                                    package是上述自定义assembly descriptor依赖中的xml文件的名字，而不是xml里面的id
                                    文件名错误会报错：Error reading assemblies: Descriptor with ID 'package' not found
                                    说明assemblies目录也是固定的名称
                                -->
                                <descriptorRef>package</descriptorRef>
                            </descriptorRefs>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

			<!--没有addClasspath就要在Class-Path加上当前目录"."-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <!--使用-jar运行，需要带上-->
                    <archive>
                        <manifest>
                            <mainClass>jar.test.Main</mainClass>
                        </manifest>
                        <manifestEntries>
                            <!--将主类jar当前目录lib和conf加到classpath-->
                            <Class-Path>../conf/ .</Class-Path>
                        </manifestEntries>
                    </archive>
                    <!--exclude的目录不是src下面的，是以编译结果classes为根目录计算的-->
                    <excludes>
                        <exclude>*.properties</exclude>
                        <exclude>*.xml</exclude>
                    </excludes>
                </configuration>
            </plugin>
			
			<!--有了addClasspath就不用在Class-Path加上当前目录"."-->
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>jar.test.Main</mainClass>
                        </manifest>
                        <manifestEntries>
                            <Class-Path>../conf/</Class-Path>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>